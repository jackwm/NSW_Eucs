}else
target.dir <- paste(target.dir,dir()[check>0],sep='/')
setwd(target.dir)
# The below regular expression searches for folders with either Sap or Den in the name"
check <- regexpr(".{6}(Sap|Den).{3}",dir())
to_search <- dir()[check>0]
n <- 0
for (folder in to_search){
setwd(paste(target.dir,folder,sep='/'))
n <- n + 1
output.list <- list()
for (f in dir() ) {
print(paste("reading csv file:",f))
# defining target file
target.file <- f
# reading in the first data file, with some column names
DF1028 <- read.csv(file = target.file, skip = 0, header = TRUE)
if (names(DF1028)[1]!='TIMESTAMP'){
col.names.obj <- read.csv(file = target.file, skip = 1, header = TRUE)
DF1028 <- read.csv(file = target.file, skip = 4, header = FALSE, col.names=names(col.names.obj),
as.is = TRUE)
}
colnames(DF1028)[2:3] <- paste(colnames(DF1028)[2:3],'.',sep='')
junk_length <- length(strsplit(folder,'')[[1]])-3
reg_expr <- paste('.{',as.character(junk_length),'}',sep='')
site.id <- gsub(reg_expr,'',folder)
colnames(DF1028)[2:7] <- paste(colnames(DF1028)[2:7],site.id,sep='')
# creating list of dataframes
output.list[[f]] <- DF1028
}
# rbind all files in dir
output.df <- do.call("rbind", output.list)
# drop non-unique rows
output.df <- unique(output.df)
# clearing out the junk rownames
rownames(output.df) <- NULL
df.list[[n]] <- output.df
}
ncol(DF1028)
target.dir <- '~/Dropbox/phd/data/Level_1A/2012-11-14'
target.dir <- paste(target.dir,'CS',sep='/')
setwd(target.dir);
# initialising output list
df.list <- list()
# Checking to find a Kanga_Data_per_site
check <- regexpr("Kanga", dir())
if(max(check)==-1){
print(paste("Expected Folder starting with 'Kanga' None were found in",getwd()))
}else
target.dir <- paste(target.dir,dir()[check>0],sep='/')
setwd(target.dir)
# The below regular expression searches for folders with either Sap or Den in the name"
check <- regexpr(".{6}(Sap|Den).{3}",dir())
to_search <- dir()[check>0]
n <- 0
for (folder in to_search){
setwd(paste(target.dir,folder,sep='/'))
n <- n + 1
output.list <- list()
for (f in dir() ) {
print(paste("reading csv file:",f))
# defining target file
target.file <- f
# reading in the first data file, with some column names
DF1028 <- read.csv(file = target.file, skip = 0, header = TRUE)
if (names(DF1028)[1]!='TIMESTAMP'){
col.names.obj <- read.csv(file = target.file, skip = 1, header = TRUE)
DF1028 <- read.csv(file = target.file, skip = 4, header = FALSE, col.names=names(col.names.obj),
as.is = TRUE)
}
colnames(DF1028)[2:3] <- paste(colnames(DF1028)[2:3],'.',sep='')
junk_length <- length(strsplit(folder,'')[[1]])-3
reg_expr <- paste('.{',as.character(junk_length),'}',sep='')
site.id <- gsub(reg_expr,'',folder)
colnames(DF1028)[2:ncol(DF1028)] <- paste(colnames(DF1028)[2:ncol(DF1028)],site.id,sep='')
# creating list of dataframes
output.list[[f]] <- DF1028
}
# rbind all files in dir
output.df <- do.call("rbind", output.list)
# drop non-unique rows
output.df <- unique(output.df)
# clearing out the junk rownames
rownames(output.df) <- NULL
df.list[[n]] <- output.df
}
# names(df.list) <- to_search
target.dir <- '~/Dropbox/phd/data/Level_1A/2012-11-14'
target.dir <- paste(target.dir,'CS',sep='/')
setwd(target.dir);
# initialising output list
df.list <- list()
# Checking to find a Kanga_Data_per_site
check <- regexpr("Kanga", dir())
if(max(check)==-1){
print(paste("Expected Folder starting with 'Kanga' None were found in",getwd()))
}else
target.dir <- paste(target.dir,dir()[check>0],sep='/')
setwd(target.dir)
# The below regular expression searches for folders with either Sap or Den in the name"
check <- regexpr(".{6}(Sap|Den).{3}",dir())
to_search <- dir()[check>0]
n <- 0
for (folder in to_search){
setwd(paste(target.dir,folder,sep='/'))
n <- n + 1
output.list <- list()
for (f in dir() ) {
print(paste("reading csv file:",f))
# defining target file
target.file <- f
# reading in the first data file, with some column names
DF1028 <- read.csv(file = target.file, skip = 0, header = TRUE)
if (names(DF1028)[1]!='TIMESTAMP'){
col.names.obj <- read.csv(file = target.file, skip = 1, header = TRUE)
DF1028 <- read.csv(file = target.file, skip = 4, header = FALSE, col.names=names(col.names.obj),
as.is = TRUE)
}
print('1')
colnames(DF1028)[2:3] <- paste(colnames(DF1028)[2:3],'.',sep='')
junk_length <- length(strsplit(folder,'')[[1]])-3
reg_expr <- paste('.{',as.character(junk_length),'}',sep='')
site.id <- gsub(reg_expr,'',folder)
print('2')
colnames(DF1028)[2:ncol(DF1028)] <- paste(colnames(DF1028)[2:ncol(DF1028)],site.id,sep='')
print('3')
# creating list of dataframes
output.list[[f]] <- DF1028
}
# rbind all files in dir
output.df <- do.call("rbind", output.list)
# drop non-unique rows
output.df <- unique(output.df)
# clearing out the junk rownames
rownames(output.df) <- NULL
df.list[[n]] <- output.df
}
target.dir <- '~/Dropbox/phd/data/Level_1A/2012-11-14'
target.dir <- paste(target.dir,'CS',sep='/')
setwd(target.dir);
# initialising output list
df.list <- list()
# Checking to find a Kanga_Data_per_site
check <- regexpr("Kanga", dir())
if(max(check)==-1){
print(paste("Expected Folder starting with 'Kanga' None were found in",getwd()))
}else
target.dir <- paste(target.dir,dir()[check>0],sep='/')
setwd(target.dir)
# The below regular expression searches for folders with either Sap or Den in the name"
check <- regexpr(".{6}(Sap|Den).{3}",dir())
to_search <- dir()[check>0]
n <- 0
for (folder in to_search){
setwd(paste(target.dir,folder,sep='/'))
n <- n + 1
output.list <- list()
for (f in dir() ) {
print(paste("reading csv file:",f))
# defining target file
target.file <- f
# reading in the first data file, with some column names
DF1028 <- read.csv(file = target.file, skip = 0, header = TRUE)
print('0')
if (names(DF1028)[1]!='TIMESTAMP'){
col.names.obj <- read.csv(file = target.file, skip = 1, header = TRUE)
DF1028 <- read.csv(file = target.file, skip = 4, header = FALSE, col.names=names(col.names.obj),
as.is = TRUE)
}
print('1')
colnames(DF1028)[2:3] <- paste(colnames(DF1028)[2:3],'.',sep='')
junk_length <- length(strsplit(folder,'')[[1]])-3
reg_expr <- paste('.{',as.character(junk_length),'}',sep='')
site.id <- gsub(reg_expr,'',folder)
print('2')
colnames(DF1028)[2:ncol(DF1028)] <- paste(colnames(DF1028)[2:ncol(DF1028)],site.id,sep='')
print('3')
# creating list of dataframes
output.list[[f]] <- DF1028
}
# rbind all files in dir
output.df <- do.call("rbind", output.list)
# drop non-unique rows
output.df <- unique(output.df)
# clearing out the junk rownames
rownames(output.df) <- NULL
df.list[[n]] <- output.df
}
to_search[1]
to_search[1:3,5:6]
?next
next
target.dir <- '~/Dropbox/phd/data/Level_1A/2012-11-14'
target.dir <- paste(target.dir,'CS',sep='/')
setwd(target.dir);
# initialising output list
df.list <- list()
# Checking to find a Kanga_Data_per_site
check <- regexpr("Kanga", dir())
if(max(check)==-1){
print(paste("Expected Folder starting with 'Kanga' None were found in",getwd()))
}else
target.dir <- paste(target.dir,dir()[check>0],sep='/')
setwd(target.dir)
# The below regular expression searches for folders with either Sap or Den in the name"
check <- regexpr(".{6}(Sap|Den).{3}",dir())
to_search <- dir()[check>0]
n <- 0
for (folder in to_search){
if(folder=='Kanga_Den03A') next
setwd(paste(target.dir,folder,sep='/'))
n <- n + 1
output.list <- list()
for (f in dir() ) {
print(paste("reading csv file:",f))
# defining target file
target.file <- f
# reading in the first data file, with some column names
DF1028 <- read.csv(file = target.file, skip = 0, header = TRUE)
print('0')
if (names(DF1028)[1]!='TIMESTAMP'){
col.names.obj <- read.csv(file = target.file, skip = 1, header = TRUE)
DF1028 <- read.csv(file = target.file, skip = 4, header = FALSE, col.names=names(col.names.obj),
as.is = TRUE)
}
print('1')
colnames(DF1028)[2:3] <- paste(colnames(DF1028)[2:3],'.',sep='')
junk_length <- length(strsplit(folder,'')[[1]])-3
reg_expr <- paste('.{',as.character(junk_length),'}',sep='')
site.id <- gsub(reg_expr,'',folder)
print('2')
colnames(DF1028)[2:ncol(DF1028)] <- paste(colnames(DF1028)[2:ncol(DF1028)],site.id,sep='')
print('3')
# creating list of dataframes
output.list[[f]] <- DF1028
}
# rbind all files in dir
output.df <- do.call("rbind", output.list)
# drop non-unique rows
output.df <- unique(output.df)
# clearing out the junk rownames
rownames(output.df) <- NULL
df.list[[n]] <- output.df
}
folder
target.dir <- '~/Dropbox/phd/data/Level_1A/2012-11-14'
target.dir <- paste(target.dir,'CS',sep='/')
setwd(target.dir);
# initialising output list
df.list <- list()
# Checking to find a Kanga_Data_per_site
check <- regexpr("Kanga", dir())
if(max(check)==-1){
print(paste("Expected Folder starting with 'Kanga' None were found in",getwd()))
}else
target.dir <- paste(target.dir,dir()[check>0],sep='/')
setwd(target.dir)
# The below regular expression searches for folders with either Sap or Den in the name"
check <- regexpr(".{6}(Sap|Den).{3}",dir())
to_search <- dir()[check>0]
n <- 0
for (folder in to_search){
if(folder=='Kanga_Sap03A') next
setwd(paste(target.dir,folder,sep='/'))
n <- n + 1
output.list <- list()
for (f in dir() ) {
print(paste("reading csv file:",f))
# defining target file
target.file <- f
# reading in the first data file, with some column names
DF1028 <- read.csv(file = target.file, skip = 0, header = TRUE)
print('0')
if (names(DF1028)[1]!='TIMESTAMP'){
col.names.obj <- read.csv(file = target.file, skip = 1, header = TRUE)
DF1028 <- read.csv(file = target.file, skip = 4, header = FALSE, col.names=names(col.names.obj),
as.is = TRUE)
}
print('1')
colnames(DF1028)[2:3] <- paste(colnames(DF1028)[2:3],'.',sep='')
junk_length <- length(strsplit(folder,'')[[1]])-3
reg_expr <- paste('.{',as.character(junk_length),'}',sep='')
site.id <- gsub(reg_expr,'',folder)
print('2')
colnames(DF1028)[2:ncol(DF1028)] <- paste(colnames(DF1028)[2:ncol(DF1028)],site.id,sep='')
print('3')
# creating list of dataframes
output.list[[f]] <- DF1028
}
# rbind all files in dir
output.df <- do.call("rbind", output.list)
# drop non-unique rows
output.df <- unique(output.df)
# clearing out the junk rownames
rownames(output.df) <- NULL
df.list[[n]] <- output.df
}
target.dir <- '~/Dropbox/phd/data/Level_1A/2012-11-14'
target.dir <- paste(target.dir,'CS',sep='/')
setwd(target.dir);
# initialising output list
df.list <- list()
# Checking to find a Kanga_Data_per_site
check <- regexpr("Kanga", dir())
if(max(check)==-1){
print(paste("Expected Folder starting with 'Kanga' None were found in",getwd()))
}else
target.dir <- paste(target.dir,dir()[check>0],sep='/')
setwd(target.dir)
# The below regular expression searches for folders with either Sap or Den in the name"
check <- regexpr(".{6}(Den).{3}",dir())
to_search <- dir()[check>0]
n <- 0
for (folder in to_search){
setwd(paste(target.dir,folder,sep='/'))
n <- n + 1
output.list <- list()
for (f in dir() ) {
print(paste("reading csv file:",f))
# defining target file
target.file <- f
# reading in the first data file, with some column names
DF1028 <- read.csv(file = target.file, skip = 0, header = TRUE)
if (names(DF1028)[1]!='TIMESTAMP'){
col.names.obj <- read.csv(file = target.file, skip = 1, header = TRUE)
DF1028 <- read.csv(file = target.file, skip = 4, header = FALSE, col.names=names(col.names.obj),
as.is = TRUE)
}
colnames(DF1028)[2:3] <- paste(colnames(DF1028)[2:3],'.',sep='')
junk_length <- length(strsplit(folder,'')[[1]])-3
reg_expr <- paste('.{',as.character(junk_length),'}',sep='')
site.id <- gsub(reg_expr,'',folder)
colnames(DF1028)[2:ncol(DF1028)] <- paste(colnames(DF1028)[2:ncol(DF1028)],site.id,sep='')
# creating list of dataframes
output.list[[f]] <- DF1028
}
# rbind all files in dir
output.df <- do.call("rbind", output.list)
# drop non-unique rows
output.df <- unique(output.df)
# clearing out the junk rownames
rownames(output.df) <- NULL
df.list[[n]] <- output.df
}
View(df.list)
to_search
names(df.list) <- to_search
View(df.list[[1]])
View(df.list[[2]])
View(df.list[[3]])
View(df.list[[1]])
stop
?stop
target.dir <- '~/Dropbox/phd/data/Level_1A/2012-11-14'
target.dir <- paste(target.dir,'CS',sep='/')
setwd(target.dir);
# initialising output list
df.list <- list()
# Checking to find a Kanga_Data_per_site
check <- regexpr("Kanga", dir())
if(max(check)==-1){
print(paste("Expected Folder starting with 'Kanga' None were found in",getwd()))
}else
target.dir <- paste(target.dir,dir()[check>0],sep='/')
setwd(target.dir)
# The below regular expression searches for folders with either Sap or Den in the name"
check <- regexpr(".{6}(Den).{3}",dir())
to_search <- dir()[check>0]
n <- 0
for (folder in to_search){
setwd(paste(target.dir,folder,sep='/'))
n <- n + 1
output.list <- list()
for (f in dir() ) {
print(paste("reading csv file:",f))
# defining target file
target.file <- f
# reading in the first data file, with some column names
DF1028 <- read.csv(file = target.file, skip = 0, header = TRUE)
if (names(DF1028)[1]!='TIMESTAMP'){
col.names.obj <- read.csv(file = target.file, skip = 1, header = TRUE)
DF1028 <- read.csv(file = target.file, skip = 4, header = FALSE, col.names=names(col.names.obj),
as.is = TRUE)
}
colnames(DF1028)[2:3] <- paste(colnames(DF1028)[2:3],'.',sep='')
junk_length <- length(strsplit(folder,'')[[1]])-3
reg_expr <- paste('.{',as.character(junk_length),'}',sep='')
site.id <- gsub(reg_expr,'',folder)
colnames(DF1028)[2:ncol(DF1028)] <- paste(colnames(DF1028)[2:ncol(DF1028)],site.id,sep='')
# creating list of dataframes
output.list[[f]] <- DF1028
}
# rbind all files in dir
output.df <- do.call("rbind", output.list)
stop
# drop non-unique rows
output.df <- unique(output.df)
# clearing out the junk rownames
rownames(output.df) <- NULL
df.list[[n]] <- output.df
}
target.dir <- '~/Dropbox/phd/data/Level_1A/2012-11-14'
target.dir <- paste(target.dir,'CS',sep='/')
setwd(target.dir);
# initialising output list
df.list <- list()
# Checking to find a Kanga_Data_per_site
check <- regexpr("Kanga", dir())
if(max(check)==-1){
print(paste("Expected Folder starting with 'Kanga' None were found in",getwd()))
}else
target.dir <- paste(target.dir,dir()[check>0],sep='/')
setwd(target.dir)
# The below regular expression searches for folders with either Sap or Den in the name"
check <- regexpr(".{6}(Den).{3}",dir())
to_search <- dir()[check>0]
n <- 0
folder <- to_search[1]
folder
setwd(paste(target.dir,folder,sep='/'))
n <- n + 1
for (f in dir() ) {
print(paste("reading csv file:",f))
# defining target file
target.file <- f
# reading in the first data file, with some column names
DF1028 <- read.csv(file = target.file, skip = 0, header = TRUE)
if (names(DF1028)[1]!='TIMESTAMP'){
col.names.obj <- read.csv(file = target.file, skip = 1, header = TRUE)
DF1028 <- read.csv(file = target.file, skip = 4, header = FALSE, col.names=names(col.names.obj),
as.is = TRUE)
}
colnames(DF1028)[2:3] <- paste(colnames(DF1028)[2:3],'.',sep='')
junk_length <- length(strsplit(folder,'')[[1]])-3
reg_expr <- paste('.{',as.character(junk_length),'}',sep='')
site.id <- gsub(reg_expr,'',folder)
colnames(DF1028)[2:ncol(DF1028)] <- paste(colnames(DF1028)[2:ncol(DF1028)],site.id,sep='')
# creating list of dataframes
output.list[[f]] <- DF1028
}
View(output.list[[1]])
View(output.list[[7]])
View(output.list[[4]])
View(output.list[[1]])
setwd(paste(target.dir,folder,sep='/'))
getwd()
dir()
f <- dir()[7]
print(paste("reading csv file:",f))
# defining target file
target.file <- f
# reading in the first data file, with some column names
DF1028 <- read.csv(file = target.file, skip = 0, header = TRUE)
View(DF1028)
if (names(DF1028)[1]!='TIMESTAMP'){
col.names.obj <- read.csv(file = target.file, skip = 1, header = TRUE)
DF1028 <- read.csv(file = target.file, skip = 4, header = FALSE, col.names=names(col.names.obj),
as.is = TRUE)
}
colnames(DF1028)[2:3] <- paste(colnames(DF1028)[2:3],'.',sep='')
junk_length <- length(strsplit(folder,'')[[1]])-3
reg_expr <- paste('.{',as.character(junk_length),'}',sep='')
site.id <- gsub(reg_expr,'',folder)
colnames(DF1028)[2:ncol(DF1028)] <- paste(colnames(DF1028)[2:ncol(DF1028)],site.id,sep='')
View(DF1028)
output.list[[f]] <- DF1028
View(output.list)
View(output.list[[1]])
test <- output.list[1]
fix(test)
test <- output.list[[1]]
viewData(test)
View(DF1028)
viewData(test)
viewData(test[1000:2000,])
viewData(test[5000:6000,])
viewData(test[8000:9000,])
target.dir <- '~/Dropbox/phd/data/Level_1A/2012-11-14'
target.dir <- paste(target.dir,'CS',sep='/')
setwd(target.dir);
# initialising output list
df.list <- list()
# Checking to find a Kanga_Data_per_site
check <- regexpr("Kanga", dir())
if(max(check)==-1){
print(paste("Expected Folder starting with 'Kanga' None were found in",getwd()))
}else
target.dir <- paste(target.dir,dir()[check>0],sep='/')
setwd(target.dir)
# The below regular expression searches for folders with either Sap or Den in the name"
check <- regexpr(".{6}(Met).{2,3}",dir())
to_search <- dir()[check>0]
to_search
check <- regexpr(".{6}(TRh).{2,3}",dir())
to_search <- dir()[check>0]
to_search
check <- regexpr(".{6}(Met).{2,3}",dir())
to_search <- dir()[check>0]
to_search
n <- 0
folder <- to_search
folder
setwd(paste(target.dir,folder,sep='/'))
n <- n + 1
dir()
f <- dir()[1]
f
print(paste("reading csv file:",f))
# defining target file
target.file <- f
# reading in the first data file, with some column names
DF1028 <- read.csv(file = target.file, skip = 0, header = TRUE)
